#summary Developers' Guide - Component - Core
#labels Phase-Implementation
#sidebar DeveloperGuideSidebar

<wiki:toc max_depth="4">

= Overview =
The Core layer provide the main functionality of the system and provide a interface for the User Interface to interact with the system.

= Classes =
`SystemLogicLayer` The main class that provided the implementation for the IUIControllerInterface. It provide most of the functionality that is required and delegate most of the specific jobs to the respective Layer.

`PathTable` The table incharge of keeping history of seamless Sync Request, to reduce amount unnecessary request sent to the CompareAndSyncController (see below)

`LogicQueueObserver` The observer for the System Logic Notification Queue. Process the notification and inform the System Logic Layer about the notification received.

`SaveLoadHelper` The helper incharge of saving the profiling data and tagging data to the various locations (see below)

= Description of Design =

= Explanation of Algorithms =

== !PathTable ==
The main reason for the implementation of path table is due to how file system watcher works and how our seamless works.
Take 3 Folder for example , Folder A , B and C.

If a new file is added to Folder A , the following events will be generated
Folder A(new) -> Folder B
Folder A(new) -> Folder C

Due to how file system works, after the file is copy, Folder B will also detect a change and at almost the same time , Folder C will also detect a change.

The changes detected in the 2 folder may not come any particular order.

The following event needs to be filtered away :
Folder B(New) -> Folder A
Folder B(New) -> Folder C
Folder C(New) -> Folder A
Folder C(New) -> Folder B

Therefore, when a event is detected, all possible expected events needs to be added to the pathtable and when the event occurs, the event will be remove from the path table and `CompareAndSyncController` will not be inform of the event.

This greatly reduces the number of events that `CompareAndSyncController` received.

However, this also brings in a number of issues. One of which is when events happens too fast, some of the entries in the pathtable may not be cleared. To clear the pathtable, we will clear the path table after a certain time of inactivity.

== !SaveLoadHelper ==

Save the data into different location. The locations saved include the follow :
1) The Directory contains the executable.
2) All local drives if the local drive contains a guid attached to it.
3) All external drives if the drive contains a guid attached to it.