#summary Developers' Guide
#labels Phase-Implementation,Featured
#sidebar DeveloperGuideSidebar

http://big5sync.googlecode.com/files/mainpagelogosmall.png

----

<wiki:toc max_depth="6" />

= System Overview =

     == Architecture ==
        
        Following the Model-View-Controller (MVC) model, the system is split into User  
        Interface (UI) and System Logic Layer (SLL). The UI is completely separated 
        from SLL. The SLL uses a facade pattern. It is further divided into several sub-components, all of which work independently of one another.

        Communication between the UI and the SLL is done through a Service                   
        Locator and an Interface. This allows us to change the SLL without 
        affecting the UI. On top of that, this also allows other developers to create 
        their own user interfaces to work with SLL.

     == Data Storing ==
      
        Syncless uses various XML files to store information. XML was chosen as it is more readable and portable. Examples are tagging.xml and 
        profiling.xml, which are stored in the root folder of the application. On top of 
        that, some XML is also stored on the removable devices that the user has tagged. These XML files are 
        use to communicate information between 2 computers. 

        Finally, each folder that is tagged also have metadata stored in them. At the  
        moment, the XML is stored in a folder {{{.syncless}}} and is hidden. In the future, 
        we will move this metadata elsewhere as most users do not like seeing "unwanted" files appearing all over the place.

     == Interaction among Sub-Components ==

        [http://code.google.com/p/big5sync/wiki/DeveloperSLLSequenceDiagrams Sequence Diagrams]
 
= System Components =

     == Profiling ==

        The Profiling component performs drive/computer recognization. It makes Syncless
        truly portable because of its ability to recognize different drives/computers by 
        creating a Globally Unique IDentifier (GUID) in each of them. It also performs 
        conversion of a physical directory/file path to a logical address, and vice versa. 
        This conversion is necessary, because !CompareAndSync only recognizes physical 
        path while Tagging recognizes a logical path.

        [http://code.google.com/p/big5sync/wiki/DeveloperComponentProfiling More details...]

     == Tagging ==

        The Tagging component provides the underlying operations of creating and removing tags, as well as tagging and untagging folders from tags. It also manages other settings such as the filter settings per tag.

        [http://code.google.com/p/big5sync/wiki/DeveloperComponentTagging More details...]

     == !CompareAndSync ==

        The !CompareAndSync component in Syncless is the part of the system that handles 
        the comparison and syncing of files and folders. From a logical point of view, it 
        can be briefly split into 2 subcomponents; the manual subcomponent that handles 
        all manual operations, and the seamless subcomponent that handles all the 
        automated synchronization requests from another component, the Monitor.

        [http://code.google.com/p/big5sync/wiki/DeveloperComponentCompareAndSync More details...]

     == Monitor ==

        The Monitor component provides functions to monitor the file system and 
        drive insertion events. Upon each kind of event detected, it will decide whether or not to alert the SLL, which will then communicate with the other components to perform an auto synchronization.
 
        [http://code.google.com/p/big5sync/wiki/DeveloperComponentMonitor More details...]

     == Logging ==

        The Logging component is in charge of handling all user and debug logging actions. It is implemented using log4net with the Decorator pattern.

        [http://code.google.com/p/big5sync/wiki/DeveloperComponentLogging More details...]

     == User Interface ==

        The User Interface component is in charge of handling all interactions between the user and the control layer. It is implemented using WPF to achieve true separation of the control layer from the view layer and a clean & professional look-and-feel.

        [http://code.google.com/p/big5sync/wiki/DeveloperComponentUI More details...]
     
= Known Issues =
There are some known issues with V0.9, and they can be found [http://code.google.com/p/big5sync/wiki/KnownIssues09 here].

= Special Cases =
Syncless aims not to throw any kind of file or folder synchronization, and although it generally works as expected in most cases, there may be some sequence of actions that are handled differently. A list of these special cases can be found [http://code.google.com/p/big5sync/wiki/SpecialCases here].        

= Recommended Resources =
[http://code.google.com/p/big5sync/wiki/DeveloperGuideRecommendations These] are additional resources which may help the developer in understanding how to develop for Syncless further.