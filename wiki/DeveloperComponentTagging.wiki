#summary Developer's Guide - Component - Tagging
#labels Phase-Implementation
#sidebar DeveloperGuideSidebar

= Tagging =

<wiki:toc max_depth="6" />

== Overview ==

The Tagging component provides the underlying operations of creating/removing a tag, tagging/untagging a folder to/from a tag, managing filter properties and configuring tag properties.

== The Classes ==

The Tagging component consists of several important sub-components, including a main logic layer - *TaggingLayer*, model objects - *TaggingProfile*, *Tag*, *TaggedPath* and *TagConfig*, helper components - *TagMerger*, *TaggingHelper* and *TaggingXMLHelper*.

=== TaggingLayer ===

This is the main logic layer which is called by the *SystemLogicLayer* to perform tag-related operations. When *Syncless* is started up, *SystemLogicLayer* will call *TaggingLayer* for initialization. 

When initialized, *TaggingLayer* will call *TaggingXMLHelper* to load the current tagging profile from _tagging.xml_ in the computer. If there are more than one _tagging.xml_ files available (this may happen if there are removable drives plugged into the computer), *TaggingLayer* will call *TagMerger* to perform merging of several tagging profiles based on various sources of _tagging.xml_.

==== Sequence Diagram of Init ====

<img src = "http://big5sync.googlecode.com/files/TaggingInit.jpg" width = 510 height = 520 />

After initialization, *TaggingLayer* can be called to perform tag-related operations.

The main operations which will trigger interactions among the various classes in Tagging component include:<br>
-CreateTag<br>
-DeleteTag<br>
-TagFolder<br>
-UntagFolder<br>
-UpdateFilter<br>

==== Sequence Diagram of CreateTag ====

==== Sequence Diagram of DeleteTag ====

==== Sequence Diagram of TagFolder ====

==== Sequence Diagram of UntagFolder ====

==== Sequence Diagram of UpdateFilter ====

=== TaggingXMLHelper ===

This is a helper which performs XML-related operations. It reads from and writes to _tagging.xml_ which stores information of all tags and their configuration.

The conversion from a tagging profile to _tagging.xml_, and vice versa, is easily extensible. There are separate methods which take care of reading/writing each tagging profile property. If there are more properties to be added to *TaggingProfile*, only *ConvertTaggingProfileToXml* and *ConvertXmlToTaggingProfile* need to be changed, and then just create additional methods which read/write each of the new property.

Conversion from _tagging.xml_ to *TaggingProfile*:<br>
-ConvertXmlToTaggingProfile(XmlDocument)<br>
-CreateTaggingProfile(XmlElement)<br>
-CreateTagFromXml(XmlElement)<br>
-CreateFolders(XmlElement)<br>
-CreatePath(XmlElement)<br>
-CreateTagConfig(XmlElement)<br>
-LoadFilterList(XmlElement)<br>
-LoadFilter(XmlElement)<br>

Conversion from *TaggingProfile* to _tagging.xml_:<br>
-ConvertTaggingProfileToXml(TaggingProfile)<br>
-CreateTagElement(XmlDocument, Tag)<br>
-CreateFoldersElements(XmlDocument, Tag)<br>
-CreateTaggedFolderElement(XmlDocument, TaggedPath)<br>
-CreateConfigElement(XmlDocument, Tag)<br>
-CreateFilterElementList(XmlDocument, Tag)<br>
-CreateFilterElement(XmlDocument, Filter)<br>

== Description of Design ==

== Explanation of ==

== Extending Tagging ==

== Glossary ==

_tagging.xml_