#summary Developer's Guide - Component - Tagging

= Tagging =

== Overview ==

The Tagging component provides the underlying operations of creating/removing a tag, tagging/untagging a folder to/from a tag, managing filter properties and configuring tag properties.

== Class Diagram ==

The Tagging component consists of several important sub-components, including a main logic layer - *TaggingLayer*, model objects - *TaggingProfile*, *Tag*, *TaggedPath* and *TagConfig*, helper components - *TagMerger*, *TaggingHelper* and *TaggingXMLHelper*.

=== TaggingLayer ===

This is the main logic layer which is called by the *SystemLogicLayer* to perform tag-related operations. When *Syncless* is started up, *SystemLogicLayer* will call *TaggingLayer* for initialization. 

When initialized, *TaggingLayer* will call *TaggingXMLHelper* to load the current tagging profile from _tagging.xml_ in the computer. If there are more than one _tagging.xml_ files available (this may happen if there are removable drives plugged into the computer), *TaggingLayer* will call *TagMerger* to perform merging of several tagging profiles based on various sources of _tagging.xml_.

==== Sequence Diagram of Init ====

After initialization, *TaggingLayer* can be called to perform tag-related operations.

=== TaggingProfile ===

This is the main object contained in *TaggingLayer* to store information related to tagging operations.

Properties of *TaggingProfile* include:<br>
-ProfileName<br>
-TagList<br>
-CreatedDate<br>
-LastUpdatedDate<br>

*TagList* contains a list of tags which are created when *Syncless* is run. Most methods under *TaggingProfile* will need to make changes to *TagList*, such as *AddTag*, *TagFolder*, *UntagFolder* and *RenameFolder*.

=== Tag ===

This is the object that stores information of each individual tag.

Properties of *Tag* include:<br>
-TagName<br>
-UnfilteredPathList<br>
-FilteredPathList<br>
-FilteredPathListString<br>
-CreatedDate<br>
-LastUpdatedDate<br>
-IsDeleted<br>
-DeletedDate<br>
-Config<br>
-IsSeamless<br>
-ArchiveName<br>
-ArchiveCount<br>
-Recycle<br>
-Filters<br>
-FiltersUpdatedDate<br>

*UnfilteredPathList* contains a list of all folder paths tagged to this particular tag, including untagged folder paths which were previously tagged, and folder paths which are currently still tagged.<br><br>
*FilteredPathList* contains a list of folder paths which are currently still tagged.<br><br>
*Config* contains the additional tag configurations as defined by the user.<br><br>
*Filters* contains a list of all filters.<br>

=== TaggedPath ===

This is the object that stores information of each folder path that is being tagged.

Properties of *TaggedPath* include:<br>
-PathName<br>
-CreatedDate<br>
-LastUpdatedDate<br>
-DeletedDate<br>
-IsDeleted<br>
-LogicalDriveId<br>

*PathName* is the full path name of a particular folder that is being tagged.<br><br>
*IsDeleted* indicates whether this particular path has been untagged.<br>

=== TagConfig ===

This is the object that stores the configuration of a particular tag.

Properties of *TagConfig* include:<br>
-IsSeamless<br>
-ArchiveFolderName<br>
-ArchiveCount<br>
-Recycle<br>

*IsSeamless* indicates whether the mode of synchronization is seamless or manual.<br><br>
*ArchiveFolderName* is the name of the folder that stores archived files.<br><br>
*ArchiveCount* indicates the number of archive files to keep.<br><br>
*Recycle* indicates whether to keep deleted files in the Recycle Bin.<br>

=== TaggingXMLHelper ===

This is a helper which performs XML-related operations. It reads from and writes to _tagging.xml_ which stores information of all tags and their configuration.

The conversion from a tagging profile to _tagging.xml_, and vice versa, is easily extensible. There are separate methods which take care of reading/writing each tagging profile property. If there are more properties to be added to *TaggingProfile*, only *ConvertTaggingProfileToXml* and *ConvertXmlToTaggingProfile* need to be changed, and then just create additional methods which read/write each of the new property.

Conversion from XML to *TaggingProfile*:<br>
-ConvertXmlToTaggingProfile(XmlDocument)<br>
-CreateTaggingProfile(XmlElement)<br>
-CreateTagFromXml(XmlElement)<br>
-CreateFolders(XmlElement)<br>
-CreatePath(XmlElement)<br>
-CreateTagConfig(XmlElement)<br>
-LoadFilterList(XmlElement)<br>
-LoadFilter(XmlElement)<br>

Conversion from *TaggingProfile* to XML:<br>
-ConvertTaggingProfileToXml(TaggingProfile)<br>
-CreateFoldersElements(XmlDocument, Tag)<br>
-

== Description of Design ==

== Explanation of ==

== Extending Tagging ==

== Glossary ==

_tagging.xml_