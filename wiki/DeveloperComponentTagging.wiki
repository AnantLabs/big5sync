#summary Developers' Guide - Component - Tagging
#sidebar DeveloperGuideSidebar

<wiki:toc max_depth="6" />

= Overview =

The *Tagging* component provides the underlying operations of creating/removing a tag, tagging/untagging a folder to/from a tag, managing filter properties and configuring tag properties.

= Classes =

The Tagging component consists of several important sub-components, including a main logic layer - `TaggingLayer`, model objects - `TaggingProfile`, `Tag`, `TaggedPath` and `TagConfig`, helper components - `TagMerger`, `TaggingHelper` and `TaggingXMLHelper`.

== `TaggingLayer` ==

This is the main logic layer which is called by the `SystemLogicLayer` to perform tag-related operations. When *Syncless* is started up, `SystemLogicLayer` will call `TaggingLayer` for initialization. 

When initialized, `TaggingLayer` will call `TaggingXMLHelper` to load the current tagging profile from _tagging.xml_ in the computer. If there are more than one _tagging.xml_ files available (this may happen if there are removable drives plugged into the computer), `TaggingLayer` will call `TagMerger` to perform merging of several tagging profiles based on various sources of _tagging.xml_.

=== Sequence Diagram of `Init` ===

http://big5sync.googlecode.com/files/TaggingInitResized.jpg

After initialization, `TaggingLayer` can be called to perform tag-related operations.

The main operations which will trigger interactions among the various classes in Tagging component include:
  # `CreateTag`
  # `DeleteTag`
  # `TagFolder`
  # `UntagFolder`
  # `UpdateFilter`

=== Sequence Diagram of `CreateTag` ===

http://big5sync.googlecode.com/files/TaggingCreateTag.jpg

=== Sequence Diagram of `DeleteTag` ===

http://big5sync.googlecode.com/files/TaggingDeleteTag.jpg

=== Sequence Diagram of `TagFolder` ===

http://big5sync.googlecode.com/files/TaggingTagFolder.jpg

=== Sequence Diagram of `UntagFolder` ===

http://big5sync.googlecode.com/files/TaggingUntagFolder.jpg

=== Sequence Diagram of `UpdateFilter` ===

http://big5sync.googlecode.com/files/TaggingUpdateFilter.jpg

== `TaggingXMLHelper` ==

This is a helper which performs XML-related operations. It reads from and writes to _tagging.xml_ which stores information of all tags and their configuration.

The conversion from a tagging profile to _tagging.xml_, and vice versa, is easily extensible. There are separate methods which take care of reading/writing each tagging profile property. If there are more properties to be added to `TaggingProfile`, only `ConvertTaggingProfileToXml` and `ConvertXmlToTaggingProfile` need to be changed, and then just create additional methods which read/write each of the new property.

Conversion from _tagging.xml_ to `TaggingProfile`:
  # `ConvertXmlToTaggingProfile`(`XmlDocument`)
  # `CreateTaggingProfile`(`XmlElement`)
  # `CreateTagFromXml`(`XmlElement`)
  # `CreateFolders`(`XmlElement`)
  # `CreatePath`(`XmlElement`)
  # `CreateTagConfig`(`XmlElement`)
  # `LoadFilterList`(`XmlElement`)
  # `LoadFilter`(`XmlElement`)

Conversion from `TaggingProfile` to _tagging.xml_:
  # `ConvertTaggingProfileToXml`(`TaggingProfile`)
  # `CreateTagElement`(`XmlDocument`, `Tag`)
  # `CreateFoldersElements`(`XmlDocument`, `Tag`)
  # `CreateTaggedFolderElement`(`XmlDocument`, `TaggedPath`)
  # `CreateConfigElement`(`XmlDocument`, `Tag`)
  # `CreateFilterElementList`(`XmlDocument`, `Tag`)
  # `CreateFilterElement`(`XmlDocument`, `Filter`)

= Merging Multiple _tagging.xml_ =

Merging of multiple _tagging.xml_ is necessary when the user maintains tags which contain folders across multiple devices. For example, the user may tag a folder in his home workstation and a folder in his office workstation to the same tag, and uses a thumbdrive as the intermediary device to sync the two folders. In this case, both his home workstation and office workstation will contain _tagging.xml_, as well as in the thumbdrive.

== What Properties are Checked ==

The system recognizes the differences in _tagging.xml_ found in various sources through the following properties:
  # `ProfileName` in `TaggingProfile`
  # `TagName` in `Tag`
  # `CreatedDate` in `Tag`
  # `LastUpdatedDate` in `Tag`
  # `IsDeleted` in `Tag`
  # `CreatedDate` in `TaggedPath`
  # `LastUpdatedDate` in `TaggedPath`
  # `IsDeleted` in `TaggedPath`

== How to Merge ==

= Glossary =

_tagging.xml_ : This is an XML document which stores the information of tags.