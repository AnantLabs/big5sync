#summary Developer's Guide - Component - CompareAndSync
#labels Phase-Implementation

= CompareAndSync=

== Overview ==
The *CompareAndSync* component in *Syncless* is the part of the system that handles the comparison and syncing of files and folders. From a logical point of view, it can be briefly split into 2 subcomponents; the manual subcomponent that handles all manual operations, and the seamless subcomponent that handles all the automated synchronization requests from another component, the *Monitor*.

Both sub-components are implemented very differently, as manual synchronization and automated synchronization are largely different. The manual subcomponent is implemented using a *Tree* in conjunction with the *Visitor Pattern*, while the seamless subcomponent is implemented using a *Queue*.


== Class Diagram ==



== Description of Design ==
Before going in depth into the design, we will first take a look at the data transfer objects (DTO) and entities used throughout CompareAndSync.

=== Data Transfer Objects ===
==== Request ====
Requests are data transfer objects sent to CompareAndSync when a comparison or synchronization action is to be done. The Request object is an abstract class, from which all other requests will extend from. AutoSyncRequest and ManualRequest are the respective requests for seamless and manual mode. ManualRequest is further extended to ManualSyncRequest and ManualCompareRequest.


=== Entities ===
=== CompareObject ===
CompareObjects are entities which are used during comparison and synchronization. There are basically 2 main kinds of CompareObjects, the FileCompareObject and the FolderCompareObject. RootCompareObject is a specific kind of FolderCompareObject used to represent the root paths to be compared.

===  ===


== Explanation of Algorithm ==


== Extending CompareAndSync ==